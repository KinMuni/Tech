                                                                                                                                                        
-- ***************************************************************************                                                                          
-- DO NOT modify the below provided framework and variable names/orders please                                                                          
-- Loading Data:                                                                                                                                        
-- create external table mapping for events.csv and mortality_events.csv                                                                                
                                                                                                                                                        
-- IMPORTANT NOTES:                                                                                                                                     
-- You need to put events.csv and mortality.csv under hdfs directory                                                                                    
-- '/input/events/events.csv' and '/input/mortality/mortality.csv'                                                                                      
--                                                                                                                                                      
-- To do this, run the following commands for events.csv,                                                                                               
-- 2. hdfs dfs -mkdir -p /input/events                                                                                                                  
-- 3. hdfs dfs -chown -R root /input                                                                                                                    
-- 4. exit                                                                                                                                              
-- 5. hdfs dfs -put /path-to-events.csv /input/events/                                                                                                  
-- Follow the same steps 1 - 5 for mortality.csv, except that the path should be                                                                        
-- '/input/mortality'                                                                                                                                   
-- ***************************************************************************                                                                          
-- create events table                                                                                                                                  
DROP TABLE IF EXISTS events;                                                                                                                            
CREATE EXTERNAL TABLE events (                                                                                                                          
  patient_id STRING,                                                                                                                                    
  event_id STRING,                                                                                                                                      
  event_description STRING,                                                                                                                             
  time DATE,                                                                                                                                            
  value DOUBLE)                                                                                                                                         
ROW FORMAT DELIMITED FIELDS TERMINATED BY ','                                                                                                           
STORED AS TEXTFILE                                                                                                                                      
LOCATION '/input/events';                                                                                                                               
                                                                                                                                                        
-- create mortality events table                                                                                                                        
DROP TABLE IF EXISTS mortality;                                                                                                                         
CREATE EXTERNAL TABLE mortality (                                                                                                                       
  patient_id STRING,                                                                                                                                    
  time DATE,                                                                                                                                            
  label INT)                                                                                                                                            
ROW FORMAT DELIMITED FIELDS TERMINATED BY ','                                                                                                           
STORED AS TEXTFILE
LOCATION '/input/mortality';                                   


-- ******************************************************      
-- Task 1:                                                     
-- By manipulating the above two tables,                       
-- generate two views for alive and dead patients' events      
-- ******************************************************      
-- find events for alive patients                              
-- ***** your code below *****   
                              
DROP VIEW IF EXISTS alive_events;                              
CREATE VIEW alive_events  AS
SELECT *FROM events e
WHERE NOT EXISTS ( SELECT patient_id 
 FROM mortality m
 WHERE e.patient_id = m.patient_id);
 
 
--- OR ---
DROP VIEW IF EXISTS alive_events;
CREATE VIEW alive_events
AS
SELECT events.patient_id, events.event_id, events.time

FROM events Left JOIN mortality ON (events.patient_id=mortality.patient_id)
WHERE mortality.patient_id is null;


SELECT *FROM alive_events;                                      
                                                               
-- find events for dead patients                               
-- ***** your code below *****                                 
DROP VIEW IF EXISTS dead_events;                              
CREATE VIEW dead_events  AS
SELECT e.event_id, e.event_description, e.time, e.value, m.label
FROM events as e
LEFT JOIN mortality m
ON e.patient_id = m.patient_id;

  -- **** OR **** ---
  
  DROP VIEW IF EXISTS dead_events;                              
CREATE VIEW dead_events  AS
SELECT *FROM events e
WHERE EXISTS ( SELECT patient_id 
 FROM mortality m
 WHERE e.patient_id = m.patient_id);
 
 
 ---- OR ----
 
 DROP VIEW IF EXISTS dead_events;
CREATE VIEW dead_events
AS
SELECT events.patient_id, events.event_id, events.time

FROM events INNER JOIN mortality ON events.patient_id=mortality.patient_id;


SELECT *FROM dead_events;   


                                  
                                                               
-- ************************************************            
-- Task 2: Event count metrics                                 
-- Compute average, min and max of event counts                
-- for alive and dead patients respectively                    
-- ************************************************            
-- alive patients                                              
-- ***** your code below *****    
SELECT avg(a.event_count), min(a.event_count), max(a.event_count)

FROM (SELECT COUNT(*) AS event_count FROM alive_events GROUP BY patient_id) a;
                             
INSERT OVERWRITE LOCAL DIRECTORY 'event_count_alive'           
ROW FORMAT DELIMITED                                           
FIELDS TERMINATED BY ','                                       
STORED AS TEXTFILE                                             
                                                               
-- dead patients                                               
-- ***** your code below *****   

SELECT avg(a.event_count), min(a.event_count), max(a.event_count)
-- ***** your code below *****
FROM (SELECT COUNT(*) AS event_count FROM dead_events GROUP BY patient_id) a;
                              
INSERT OVERWRITE LOCAL DIRECTORY 'event_count_dead'            
ROW FORMAT DELIMITED                                           
FIELDS TERMINATED BY ','                                       

STORED AS TEXTFILE                                             
                                                               
-- ************************************************            
-- Task 3: Encounter count metrics                             
-- Compute average, min and max of encounter counts            
-- for alive and dead patients respectively                    
-- ************************************************            
-- alive                                                       
-- ***** your code below *****  

SELECT avg(a.encounter_count), min(a.encounter_count), max(a.encounter_count)

FROM(SELECT COUNT(DISTINCT time) as encounter_count FROM alive_events GROUP BY patient_id) a;
                               
INSERT OVERWRITE LOCAL DIRECTORY 'encounter_count_alive'       
ROW FORMAT DELIMITED                                           
FIELDS TERMINATED BY ','                                       
STORED AS TEXTFILE                                             
                                                               
-- dead                                                        
-- ***** your code below *****   

SELECT avg(a.encounter_count), min(a.encounter_count), max(a.encounter_count)

FROM(SELECT COUNT(*) as encounter_count FROM (SELECT DISTINCT time, patient_id FROM dead_events) b GROUP BY patient_id) a;
                              
INSERT OVERWRITE LOCAL DIRECTORY 'encounter_count_dead'        
ROW FORMAT DELIMITED                                           
FIELDS TERMINATED BY ','                                       
STORED AS TEXTFILE                                             
                                                               
-- ************************************************            
-- Task 4: Record length metrics                               
-- Compute average, median, min and max of record lengths      
-- for alive and dead patients respectively                    
-- ************************************************            
-- alive                                                       
-- ***** your code below ***** 

SELECT avg(record_length), min(record_length), max(record_length)

FROM(SELECT datediff(max(time),MIN(time)) AS record_length FROM alive_events GROUP BY patient_id) a;
                                
INSERT OVERWRITE LOCAL DIRECTORY 'record_length_alive'         
ROW FORMAT DELIMITED                                           
FIELDS TERMINATED BY ','                                       
STORED AS TEXTFILE                                             
                                                               
-- dead  

-- ***** your code below *****    

SELECT avg(record_length), min(record_length), max(record_length)

FROM(SELECT datediff(max(time),MIN(time)) AS record_length FROM dead_events GROUP BY patient_id) a;

                             
INSERT OVERWRITE LOCAL DIRECTORY 'record_length_dead'          
ROW FORMAT DELIMITED                                           
FIELDS TERMINATED BY ','                                       
STORED AS TEXTFILE                                             
                                                               
-- *******************************************                 
-- Task 5: Common diag/lab/med                                 
-- Compute the 5 most frequently occurring diag/lab/med        
-- for alive and dead patients respectively                    
-- *******************************************                 
-- alive patients                                              
---- diag                                                      
-- ***** your code below *****

SELECT * FROM
(SELECT event_id, count(*) AS diag_count
FROM alive_events

WHERE event_id LIKE 'DIAG%' Group by event_id) a SORT BY diag_count DESC LIMIT 5;
                                 
INSERT OVERWRITE LOCAL DIRECTORY 'common_diag_alive'           
ROW FORMAT DELIMITED                                           
FIELDS TERMINATED BY ','                                       
STORED AS TEXTFILE                                             
                                                               
---- lab                                                       
-- ***** your code below *****   

SELECT * FROM
(SELECT event_id, count(*) AS lab_count
FROM alive_events

WHERE event_id LIKE 'LAB%' Group by event_id) a SORT BY lab_count DESC LIMIT 5;
                             
INSERT OVERWRITE LOCAL DIRECTORY 'common_lab_alive'            
ROW FORMAT DELIMITED                                           
FIELDS TERMINATED BY ','                                       
STORED AS TEXTFILE                                             
                                                               
---- med                                                       
-- ***** your code below *****      

SELECT * FROM
(SELECT event_id, count(*) AS med_count
FROM alive_events

WHERE event_id LIKE 'DRUG%' Group by event_id) a SORT BY  med_count DESC LIMIT 5;

                           
INSERT OVERWRITE LOCAL DIRECTORY 'common_med_alive'            
ROW FORMAT DELIMITED                                           
FIELDS TERMINATED BY ','                                       
STORED AS TEXTFILE                                             
                                                               
-- dead patients                                               

---- diag                                                      
-- ***** your code below *****         

SELECT * FROM
(SELECT event_id, count(*) AS diag_count
FROM dead_events

WHERE event_id LIKE 'DIAG%' Group by event_id) a SORT BY diag_count DESC LIMIT 5;
                        
INSERT OVERWRITE LOCAL DIRECTORY 'common_diag_dead'            
ROW FORMAT DELIMITED                                           
FIELDS TERMINATED BY ','                                       
STORED AS TEXTFILE                                             
                                                               
---- lab                                                       
-- ***** your code below *****   

SELECT * FROM
(SELECT event_id, count(*) AS lab_count
FROM dead_events

WHERE event_id LIKE 'LAB%' Group by event_id) a SORT BY lab_count DESC LIMIT 5;
                              
INSERT OVERWRITE LOCAL DIRECTORY 'common_lab_dead'             
ROW FORMAT DELIMITED                                           
FIELDS TERMINATED BY ','                                       
STORED AS TEXTFILE                                             
                                                               
---- med                                                       
-- ***** your code below *****  

SELECT * FROM
(SELECT event_id, count(*) AS med_count
FROM dead_events

WHERE event_id LIKE 'DRUG%' Group by event_id) a SORT BY med_count DESC LIMIT 5;
                               
INSERT OVERWRITE LOCAL DIRECTORY 'common_med_dead'             
ROW FORMAT DELIMITED                                           
FIELDS TERMINATED BY ','                                       
STORED AS TEXTFILE                                             
                                                      


                                                                                                                                    
